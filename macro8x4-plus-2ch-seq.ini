# 8x4 macro controller with 2-channel sequencer

# This macro controller outputs 8 control voltages which can be different in each of 8 "stages".
# 
# The behavior varies depending on whether the "go", "adv", and "addr" inputs are patched.
# 
# Without any inputs patched, control is fully manual: pressing a button immediately selects the corresponding stage, and the 8 CV outs change (possibly slewed) to the values at the chosen stage.
# 
# Turn the trimpots to set the values of the 8 CV outputs for the currently selected stage.  (There is currently no way to edit CV outputs for inactive stages.)
# 
# The four large pots control slew time for pairs of outputs, from 0-10 seconds.
# 
# Patching "go" allows stage-switching to be delayed until the next incoming gate/trigger. In this mode, pressing a button "arms" the corresponding stage. The LED on the armed button flashes until the stage is made active, which occurs on the next gate/trigger on the "go" input.
# 
# Patching "adv" allows advancement through stages using gates/triggers instead of pressing buttons. A gate/trig on "adv" either arms or directly advances to the next stage (depending on whether or not "go" is also patched). Patching "addr" together with "adv" allows voltage control over which stage is advanced to (by default, it's the current stage + 1).

# INPUTS:
#  I1: [addr] CV selection of which stage to jump to
#  I2: [go] advance to armed stage
#  I4: [clock]
#  I5: [adv] jump to next stage or 'addr'
#  I8: [reset]

# OUTPUTS:
#  O1: [CV1]
#  O2: [CV2]
#  O3: [CV3]
#  O4: [CV4]
#  O5: [pitch1]
#  O6: [gate1]
#  O7: [pitch2]
#  O8: [gate2]

# CONTROLLER 1:
#  P1.1: [slew 1-2] slew for CV 1 & 2
#  P1.2: [slew 3-4] slew for CV 3&4
#  B1.1: [stage 1]
#  B1.2: [stage 2]
#  B1.3: [stage 3]
#  B1.4: [stage 4]
#  B1.5: [stage 5]
#  B1.6: [stage 6]
#  B1.7: [stage 7]
#  B1.8: [stage 8]

# CONTROLLER 2:
#  P2.1: [stages]
#  P2.2: [gate len]
#  P2.3: [cv1/stp1] edit CV1 for currently selected stage
#  P2.4: [cv2/stp2] edit CV2 for currently selected stage
#  P2.5: [cv3/stp3] edit CV3 for currently selected stage
#  P2.6: [cv4/stp4] edit CV4 for currently selected stage
#  P2.7: [step5]
#  P2.8: [step6]
#  P2.9: [step7]
#  P2.10: [step8]

# CONTROLLER 3:
#  P3.1: [scaling]
#  P3.2: [transpose]
#  B3.1: [pitch 1]
#  B3.2: [pitch 2]
#  B3.3: [gate 1]
#  B3.4: [gate 2]
#  B3.5: [slew 1]
#  B3.6: [slew 2]
#  B3.7: [rpt 1]
#  B3.8: [rpt 2]

[p2b8]
[p10]
[p2b8]

# -------------------------------------------------
# Inputs
# -------------------------------------------------

# Indicate whether "next" is unpatched so we know whether any buttonpress should immediately advance.
[copy]
    input = -2
    output = N2

# Global variable for value of "next" input.
[copy]
    input = I2
    output = _GO_IN

[gatetool]
    inputgate = I2
    outputtrigger = _GO_TRIG_IN

# 1 if "next" input is patched, 0 otherwise.
[compare]
    input = _GO_IN
    compare = -2
    ifequal = 0
    else = 1
    output = _GO_IS_PATCHED

# Normalize an invalid CV value to "addr" so that we can detect whether this input is patched.
[copy]
    input = -2
    output = N1

# Global variable for value of "addr" input.
[copy]
    input = I1
    output = _ADDR_CV

# 1 if "addr" input is patched, 0 otherwise.
[compare]
    input = _ADDR_CV
    compare = -2
    ifequal = 0
    else = 1
    output = _ADDR_IS_PATCHED

# Normalize an invalid CV value to "reset" so that we can detect whether this input is patched.
[copy]
    input = -2
    output = N5

# Global variable for value of "reset" input.
[copy]
    input = I5
    output = _ADV_IN

# Turn reset gate into a trigger. (TODO: is this necessary?)
[gatetool]
    inputgate = I5
    outputtrigger = _ADV_TRIG

# -------------------------------------------------
# Math for macro addr
# -------------------------------------------------

# Maps [-10v, 0, +10v] to [16, 0, 16], so that 0-5v can be mapped to [0, 8).
[math]
    input1 = _ADDR_CV * 16
    amount = _STAGE_ADDR_FLOAT

# Converts stage addr to an integer.
[math]
    input1 = _STAGE_ADDR_FLOAT
    floor = _STAGE_ADDR_INT

# Ensures only valid stage values (0 thru 7)  are addressed.
[math]
    input1 = _STAGE_ADDR_INT
    input2 = 7
    minimum = _ADDRESSED_STAGE

# -------------------------------------------------
# Macro buttongroup logic
# -------------------------------------------------

# When advancing sequentially, (current+1) mod 8 = next.
[math]
    input1 = _CURRENT_STAGE + 1
    input2 = 8
    modulo = _DEFAULT_ADVSTAGE

# If "addr" CV input is patched, use that for choosing the stage to "adv" to. Otherwise, use the sequentially-next stage.
[case]
    case1 = _ADDR_IS_PATCHED
    value1 = _ADDRESSED_STAGE
    else = _DEFAULT_ADVSTAGE
    output = _STAGE_FOR_ADV

# This buttongroup is used for responding to the buttonpresses that "arm" a button (choose which button will be active on the next "go" gate).
[buttongroup]
    button1 = B1.1
    button2 = B1.2
    button3 = B1.3
    button4 = B1.4
    button5 = B1.5
    button6 = B1.6
    button7 = B1.7
    button8 = B1.8
    clear = _ADV_TRIG
    startbutton = _STAGE_FOR_ADV + 1
    value1 = 1
    value2 = 2
    value3 = 3
    value4 = 4
    value5 = 5
    value6 = 6
    value7 = 7
    value8 = 8
    buttonpress = _BUTTONPRESS
    output = _GOBUTTON

# Send the "go" trigger (to change the active button/stage) when "go" input is triggered if "go" is patched, otherwise when the button is pressed.
[case]
    case1 = _GO_IS_PATCHED
    value1 = _GO_TRIG_IN
    else = _BUTTONPRESS + _ADV_TRIG
    output = _GO_TRIG

# If we get a "adv" trigger at the same time as a "go" trigger, "adv" takes precedence.
[compare]
    input = _ADV_IN
    compare = 0.1
    ifgreater = _STAGE_FOR_ADV + 1
    ifless = _GOBUTTON
    ifequal = _GOBUTTON
    output = _OUTPUT_STARTBUTTON

# The "output" buttongroup, i.e. which button/stage is fully active.
[buttongroup]
    clear = _GO_TRIG
    startbutton = _OUTPUT_STARTBUTTON
    led1 = L1.1
    led2 = L1.2
    led3 = L1.3
    led4 = L1.4
    led5 = L1.5
    led6 = L1.6
    led7 = L1.7
    led8 = L1.8
    output = _CURRENT_STAGE

# Provides an LFO for flashing buttons. Used below to indicate which button is "armed" (active next).
[lfo]
    level = 0.3
    hz = 2
    triangle = _FLASHLFO

# Don't flash the currently-active button, even if it's also the armed button.
[compare]
    input = _GOBUTTON
    compare = _CURRENT_STAGE + 1
    ifequal = 1
    else = _FLASHLFO
    output = _FLASH

# Flash button 1 if it's armed.
[select]
    input = _FLASH
    select = _GOBUTTON
    selectat = 1
    output = L1.1

# Flash button 2 if it's armed.
[select]
    input = _FLASH
    select = _GOBUTTON
    selectat = 2
    output = L1.2

# Flash button 3 if it's armed.
[select]
    input = _FLASH
    select = _GOBUTTON
    selectat = 3
    output = L1.3

# Flash button 4 if it's armed.
[select]
    input = _FLASH
    select = _GOBUTTON
    selectat = 4
    output = L1.4

# Flash button 5 if it's armed.
[select]
    input = _FLASH
    select = _GOBUTTON
    selectat = 5
    output = L1.5

# Flash button 6 if it's armed.
[select]
    input = _FLASH
    select = _GOBUTTON
    selectat = 6
    output = L1.6

# Flash button 7 if it's armed.
[select]
    input = _FLASH
    select = _GOBUTTON
    selectat = 7
    output = L1.7

# Flash button 8 if it's armed.
[select]
    input = _FLASH
    select = _GOBUTTON
    selectat = 8
    output = L1.8

# -------------------------------------------------
# Stage 1
# -------------------------------------------------

# When Stage 1 is selected, the CV1 trimpot sets the value of the CV1 output (both currently and when later returning to Stage 1).
[pot]
    select = L1.1 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.3
    output = _CV1_STAGE1

[pot]
    select = L1.1 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.4
    output = _CV2_STAGE1

[pot]
    select = L1.1 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.5
    output = _CV3_STAGE1

[pot]
    select = L1.1 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.6
    output = _CV4_STAGE1

# -------------------------------------------------
# Stage 2
# -------------------------------------------------

[pot]
    select = L1.2 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.3
    output = _CV1_STAGE2

[pot]
    select = L1.2 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.4
    output = _CV2_STAGE2

[pot]
    select = L1.2 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.5
    output = _CV3_STAGE2

[pot]
    select = L1.2 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.6
    output = _CV4_STAGE2

# -------------------------------------------------
# Stage 3
# -------------------------------------------------

[pot]
    select = L1.3 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.3
    output = _CV1_STAGE3

[pot]
    select = L1.3 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.4
    output = _CV2_STAGE3

[pot]
    select = L1.3 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.5
    output = _CV3_STAGE3

[pot]
    select = L1.3 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.6
    output = _CV4_STAGE3

# -------------------------------------------------
# Stage 4
# -------------------------------------------------

[pot]
    select = L1.4 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.3
    output = _CV1_STAGE4

[pot]
    select = L1.4 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.4
    output = _CV2_STAGE4

[pot]
    select = L1.4 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.5
    output = _CV3_STAGE4

[pot]
    select = L1.4 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.6
    output = _CV4_STAGE4

# -------------------------------------------------
# Stage 5
# -------------------------------------------------

[pot]
    select = L1.5 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.3
    output = _CV1_STAGE5

[pot]
    select = L1.5 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.4
    output = _CV2_STAGE5

[pot]
    select = L1.5 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.5
    output = _CV3_STAGE5

[pot]
    select = L1.5 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.6
    output = _CV4_STAGE5

# -------------------------------------------------
# Stage 6
# -------------------------------------------------

[pot]
    select = L1.6 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.3
    output = _CV1_STAGE6

[pot]
    select = L1.6 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.4
    output = _CV2_STAGE6

[pot]
    select = L1.6 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.5
    output = _CV3_STAGE6

[pot]
    select = L1.6 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.6
    output = _CV4_STAGE6

# -------------------------------------------------
# Stage 7
# -------------------------------------------------

[pot]
    select = L1.7 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.3
    output = _CV1_STAGE7

[pot]
    select = L1.7 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.4
    output = _CV2_STAGE7

[pot]
    select = L1.7 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.5
    output = _CV3_STAGE7

[pot]
    select = L1.7 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.6
    output = _CV4_STAGE7

# -------------------------------------------------
# Stage 8
# -------------------------------------------------

[pot]
    select = L1.8 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.3
    output = _CV1_STAGE8

[pot]
    select = L1.8 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.4
    output = _CV2_STAGE8

[pot]
    select = L1.8 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.5
    output = _CV3_STAGE8

[pot]
    select = L1.8 * _NO_SEQ_BUTTON_ACTIVE
    pot = P2.6
    output = _CV4_STAGE8

# -------------------------------------------------
# CV Outs
# -------------------------------------------------

# Select the CV output based on the current stage.
[switch]
    input1 = _CV1_STAGE1
    input2 = _CV1_STAGE2
    input3 = _CV1_STAGE3
    input4 = _CV1_STAGE4
    input5 = _CV1_STAGE5
    input6 = _CV1_STAGE6
    input7 = _CV1_STAGE7
    input8 = _CV1_STAGE8
    offset = _CURRENT_STAGE
    output1 = _OUTCV1

# Select the CV output based on the current stage.
[switch]
    input1 = _CV2_STAGE1
    input2 = _CV2_STAGE2
    input3 = _CV2_STAGE3
    input4 = _CV2_STAGE4
    input5 = _CV2_STAGE5
    input6 = _CV2_STAGE6
    input7 = _CV2_STAGE7
    input8 = _CV2_STAGE8
    offset = _CURRENT_STAGE
    output1 = _OUTCV2

# Select the CV output based on the current stage.
[switch]
    input1 = _CV3_STAGE1
    input2 = _CV3_STAGE2
    input3 = _CV3_STAGE3
    input4 = _CV3_STAGE4
    input5 = _CV3_STAGE5
    input6 = _CV3_STAGE6
    input7 = _CV3_STAGE7
    input8 = _CV3_STAGE8
    offset = _CURRENT_STAGE
    output1 = _OUTCV3

# Select the CV output based on the current stage.
[switch]
    input1 = _CV4_STAGE1
    input2 = _CV4_STAGE2
    input3 = _CV4_STAGE3
    input4 = _CV4_STAGE4
    input5 = _CV4_STAGE5
    input6 = _CV4_STAGE6
    input7 = _CV4_STAGE7
    input8 = _CV4_STAGE8
    offset = _CURRENT_STAGE
    output1 = _OUTCV4

# Slew the CV1 output based on the "slew 1-2" pot.
[slew]
    input = _OUTCV1
    slew = P1.1
    linear = O1

# Slew the CV2 output based on the "slew 1-2" pot.
[slew]
    input = _OUTCV2
    slew = P1.1
    linear = O2

# Slew the CV3 output based on the "slew 3-4" pot.
[slew]
    input = _OUTCV3
    slew = P1.2
    linear = O3

# Slew the CV4 output based on the "slew 3-4" pot.
[slew]
    input = _OUTCV4
    slew = P1.2
    linear = O4

# -------------------------------------------------
# Global controls
# -------------------------------------------------

[buttongroup]
    minactive = 0
    maxactive = 1
    button1 = B3.1
    button2 = B3.2
    button3 = B3.3
    button4 = B3.4
    button5 = B3.5
    button6 = B3.6
    button7 = B3.7
    button8 = B3.8
    value1 = 1
    value2 = 1
    value3 = 1
    value4 = 1
    value5 = 1
    value6 = 1
    value7 = 1
    value8 = 1
    led1 = L3.1
    led2 = L3.2
    led3 = L3.3
    led4 = L3.4
    led5 = L3.5
    led6 = L3.6
    led7 = L3.7
    led8 = L3.8
    output = _ANY_SEQ_BUTTON_ACTIVE

[logic]
    input1 = _ANY_SEQ_BUTTON_ACTIVE
    negated = _NO_SEQ_BUTTON_ACTIVE

# -------------------------------------------------
# Seq1 controls
# -------------------------------------------------

# Pitch - Seq1 Step1
[pot]
    select = L3.1
    pot = P2.3
    output = _P1_1

# Pitch - Seq1 Step2
[pot]
    select = L3.1
    pot = P2.4
    output = _P1_2

# Pitch - Seq1 Step3
[pot]
    select = L3.1
    pot = P2.5
    output = _P1_3

# Pitch - Seq1 Step4
[pot]
    select = L3.1
    pot = P2.6
    output = _P1_4

# Pitch - Seq1 Step5
[pot]
    select = L3.1
    pot = P2.7
    output = _P1_5

# Pitch - Seq1 Step6
[pot]
    select = L3.1
    pot = P2.8
    output = _P1_6

# Pitch - Seq1 Step7
[pot]
    select = L3.1
    pot = P2.9
    output = _P1_7

# Pitch - Seq1 Step8
[pot]
    select = L3.1
    pot = P2.10
    output = _P1_8

# Gate - Seq1 Step1
[pot]
    select = L3.3
    pot = P2.3
    output = _G1_1

# Gate - Seq1 Step2
[pot]
    select = L3.3
    pot = P2.4
    output = _G1_2

# Gate - Seq1 Step3
[pot]
    select = L3.3
    pot = P2.5
    output = _G1_3

# Gate - Seq1 Step4
[pot]
    select = L3.3
    pot = P2.6
    output = _G1_4

# Gate - Seq1 Step5
[pot]
    select = L3.3
    pot = P2.7
    output = _G1_5

# Gate - Seq1 Step6
[pot]
    select = L3.3
    pot = P2.8
    output = _G1_6

# Gate - Seq1 Step7
[pot]
    select = L3.3
    pot = P2.9
    output = _G1_7

# Gate - Seq1 Step8
[pot]
    select = L3.3
    pot = P2.10
    output = _G1_8

# Slew - Seq1 Step1
[pot]
    select = L3.5
    pot = P2.3
    output = _S1_1

# Slew  - Seq1 Step2
[pot]
    select = L3.5
    pot = P2.4
    output = _S1_2

# Slew - Seq1 Step3
[pot]
    select = L3.5
    pot = P2.5
    output = _S1_3

# Slew - Seq1 Step4
[pot]
    select = L3.5
    pot = P2.6
    output = _S1_4

# Slew - Seq1 Step5
[pot]
    select = L3.5
    pot = P2.7
    output = _S1_5

# Slew - Seq1 Step6
[pot]
    select = L3.5
    pot = P2.8
    output = _S1_6

# Slew - Seq1 Step7
[pot]
    select = L3.5
    pot = P2.9
    output = _S1_7

# Slew - Seq1 Step8
[pot]
    select = L3.5
    pot = P2.10
    output = _S1_8

# Repeats - Seq1 Step1
[pot]
    select = L3.7
    pot = P2.3
    output = _R1_1

# Repeats  - Seq1 Step2
[pot]
    select = L3.7
    pot = P2.4
    output = _R1_2

# Repeats - Seq1 Step3
[pot]
    select = L3.7
    pot = P2.5
    output = _R1_3

# Repeats - Seq1 Step4
[pot]
    select = L3.7
    pot = P2.6
    output = _R1_4

# Repeats - Seq1 Step5
[pot]
    select = L3.7
    pot = P2.7
    output = _R1_5

# Repeats - Seq1 Step6
[pot]
    select = L3.7
    pot = P2.8
    output = _R1_6

# Repeats - Seq1 Step7
[pot]
    select = L3.7
    pot = P2.9
    output = _R1_7

# Repeats - Seq1 Step8
[pot]
    select = L3.7
    pot = P2.10
    output = _R1_8

[logic]
    input1 = L3.1
    input2 = L3.3
    input3 = L3.5
    input4 = L3.7
    or = _ISSEQ1

# Stages - Seq1
[pot]
    select = _ISSEQ1
    pot = P2.1
    output = _STAGES_1

# Gate Length - Seq1
[pot]
    select = _ISSEQ1
    pot = P2.2
    output = _GATELEN_1

# Scaling - Seq1
[pot]
    select = _ISSEQ1
    pot = P3.1
    output = _SCALING_1

# Transpose - Seq1
[pot]
    select = _ISSEQ1
    pot = P3.2
    output = _TRANSPOSE_1

# -------------------------------------------------
# Seq2 controls
# -------------------------------------------------

# Pitch - Seq2 Step1
[pot]
    select = L3.2
    pot = P2.3
    output = _P2_1

# Pitch - Seq2 Step2
[pot]
    select = L3.2
    pot = P2.4
    output = _P2_2

# Pitch - Seq2 Step3
[pot]
    select = L3.2
    pot = P2.5
    output = _P2_3

# Pitch - Seq2 Step4
[pot]
    select = L3.2
    pot = P2.6
    output = _P2_4

# Pitch - Seq2 Step5
[pot]
    select = L3.2
    pot = P2.7
    output = _P2_5

# Pitch - Seq2 Step6
[pot]
    select = L3.2
    pot = P2.8
    output = _P2_6

# Pitch - Seq2 Step7
[pot]
    select = L3.2
    pot = P2.9
    output = _P2_7

# Pitch - Seq2 Step8
[pot]
    select = L3.2
    pot = P2.10
    output = _P2_8

# Gate - Seq2 Step1
[pot]
    select = L3.4
    pot = P2.3
    output = _G2_1

# Gate - Seq2 Step2
[pot]
    select = L3.4
    pot = P2.4
    output = _G2_2

# Gate - Seq2 Step3
[pot]
    select = L3.4
    pot = P2.5
    output = _G2_3

# Gate - Seq2 Step4
[pot]
    select = L3.4
    pot = P2.6
    output = _G2_4

# Gate - Seq2 Step5
[pot]
    select = L3.4
    pot = P2.7
    output = _G2_5

# Gate - Seq2 Step6
[pot]
    select = L3.4
    pot = P2.8
    output = _G2_6

# Gate - Seq2 Step7
[pot]
    select = L3.4
    pot = P2.9
    output = _G2_7

# Gate - Seq2 Step8
[pot]
    select = L3.4
    pot = P2.10
    output = _G2_8

# Slew - Seq2 Step1
[pot]
    select = L3.6
    pot = P2.3
    output = _S2_1

# Slew  - Seq2 Step2
[pot]
    select = L3.6
    pot = P2.4
    output = _S2_2

# Slew - Seq2 Step3
[pot]
    select = L3.6
    pot = P2.5
    output = _S2_3

# Slew - Seq2 Step4
[pot]
    select = L3.6
    pot = P2.6
    output = _S2_4

# Slew - Seq2 Step5
[pot]
    select = L3.6
    pot = P2.7
    output = _S2_5

# Slew - Seq2 Step6
[pot]
    select = L3.6
    pot = P2.8
    output = _S2_6

# Slew - Seq2 Step7
[pot]
    select = L3.6
    pot = P2.9
    output = _S2_7

# Slew - Seq2 Step8
[pot]
    select = L3.6
    pot = P2.10
    output = _S2_8

# Repeats - Seq2 Step1
[pot]
    select = L3.8
    pot = P2.3
    output = _R2_1

# Repeats  - Seq2 Step2
[pot]
    select = L3.8
    pot = P2.4
    output = _R2_2

# Repeats - Seq2 Step3
[pot]
    select = L3.8
    pot = P2.5
    output = _R2_3

# Repeats - Seq2 Step4
[pot]
    select = L3.8
    pot = P2.6
    output = _R2_4

# Repeats - Seq2 Step5
[pot]
    select = L3.8
    pot = P2.7
    output = _R2_5

# Repeats - Seq2 Step6
[pot]
    select = L3.8
    pot = P2.8
    output = _R2_6

# Repeats - Seq2 Step7
[pot]
    select = L3.8
    pot = P2.9
    output = _R2_7

# Repeats - Seq2 Step8
[pot]
    select = L3.8
    pot = P2.10
    output = _R2_8

[logic]
    input1 = L3.2
    input2 = L3.4
    input3 = L3.6
    input4 = L3.8
    or = _ISSEQ2

# Stages - Seq2
[pot]
    select = _ISSEQ2
    pot = P2.1
    output = _STAGES_2

# Gate Length - Seq2
[pot]
    select = _ISSEQ2
    pot = P2.2
    output = _GATELEN_2

# Scaling - Seq2
[pot]
    select = _ISSEQ2
    pot = P3.1
    output = _SCALING_2

# Transpose - Seq2
[pot]
    select = _ISSEQ2
    pot = P3.2
    output = _TRANSPOSE_2

# -------------------------------------------------
# Sequencer outputs
# -------------------------------------------------

[copy]
    input = I4
    output = _CLOCK

[copy]
    input = I8
    output = _RESET

# Seq1
[sequencer]
    clock = _CLOCK
    reset = _RESET
    stages = _STAGES_1 * 8
    outputscaling = _SCALING_1
    transpose = _TRANSPOSE_1 * 0.6 - 0.3
    gatelength = _GATELEN_1
    pitch1 = _P1_1
    pitch2 = _P1_2
    pitch3 = _P1_3
    pitch4 = _P1_4
    pitch5 = _P1_5
    pitch6 = _P1_6
    pitch7 = _P1_7
    pitch8 = _P1_8
    gate1 = _G1_1 * 0.2
    gate2 = _G1_2 * 0.2
    gate3 = _G1_3 * 0.2
    gate4 = _G1_4 * 0.2
    gate5 = _G1_5 * 0.2
    gate6 = _G1_6 * 0.2
    gate7 = _G1_7 * 0.2
    gate8 = _G1_8 * 0.2
    slew1 = _S1_1 * 2
    slew2 = _S1_2 * 2
    slew3 = _S1_3 * 2
    slew4 = _S1_4 * 2
    slew5 = _S1_5 * 2
    slew6 = _S1_6 * 2
    slew7 = _S1_7 * 2
    slew8 = _S1_8 * 2
    repeat1 = _R1_1 * 8
    repeat2 = _R1_2 * 8
    repeat3 = _R1_3 * 8
    repeat4 = _R1_4 * 8
    repeat5 = _R1_5 * 8
    repeat6 = _R1_6 * 8
    repeat7 = _R1_7 * 8
    repeat8 = _R1_8 * 8
    pitchoutput = O5
    gateoutput = O6

# Seq2
[sequencer]
    clock = _CLOCK
    reset = _RESET
    stages = _STAGES_2 * 8
    outputscaling = _SCALING_2
    transpose = _TRANSPOSE_2 * 0.6 - 0.3
    gatelength = _GATELEN_2
    pitch1 = _P2_1
    pitch2 = _P2_2
    pitch3 = _P2_3
    pitch4 = _P2_4
    pitch5 = _P2_5
    pitch6 = _P2_6
    pitch7 = _P2_7
    pitch8 = _P2_8
    gate1 = _G2_1 * 0.2
    gate2 = _G2_2 * 0.2
    gate3 = _G2_3 * 0.2
    gate4 = _G2_4 * 0.2
    gate5 = _G2_5 * 0.2
    gate6 = _G2_6 * 0.2
    gate7 = _G2_7 * 0.2
    gate8 = _G2_8 * 0.2
    slew1 = _S2_1 * 2
    slew2 = _S2_2 * 2
    slew3 = _S2_3 * 2
    slew4 = _S2_4 * 2
    slew5 = _S2_5 * 2
    slew6 = _S2_6 * 2
    slew7 = _S2_7 * 2
    slew8 = _S2_8 * 2
    repeat1 = _R2_1 * 8
    repeat2 = _R2_2 * 8
    repeat3 = _R2_3 * 8
    repeat4 = _R2_4 * 8
    repeat5 = _R2_5 * 8
    repeat6 = _R2_6 * 8
    repeat7 = _R2_7 * 8
    repeat8 = _R2_8 * 8
    pitchoutput = O7
    gateoutput = O8
