# INPUTS:
#  I1: [mel cv] melody cv in
#  I4: [adv] advance chord sequencer
#  I8: [reset] reset chord sequencer

# OUTPUTS:
#  O1: [mel] melody 1v/oct output
#  O2: [har 1] first harmony 1v/oct output
#  O3: [har 2] second harmony 1v/oct output
#  O4: [har 3] third harmony 1v/oct output
#  O5: [root] root of underlying chord
#  O6: [third] third of underlying chord
#  O7: [fifth] fifth of underlying chord
#  O8: [seventh] seventh of underlying chord

# CONTROLLER 1:
#  B1.1: [adv]
#  B1.2: [reset]
#  B1.3: [root] pots control roots
#  B1.4: [chord] pots control degree

[p2b8]
[p10]

# -------------------------------------------------
# Chord Sequence
# -------------------------------------------------

# Sequencer layer for trimmer pots
[buttongroup]
    button1 = B1.3
    button2 = B1.4
    led1 = L1.3
    led2 = L1.4

# Sequencer Pitch 1
[pot]
    select = L1.3
    pot = P2.3
    output = _SP1

# Sequencer Pitch 2
[pot]
    select = L1.3
    pot = P2.5
    output = _SP2

# Sequencer Pitch 3
[pot]
    select = L1.3
    pot = P2.7
    output = _SP3

# Sequencer Pitch 4
[pot]
    select = L1.3
    pot = P2.9
    output = _SP4

# Sequencer Pitch 5
[pot]
    select = L1.3
    pot = P2.4
    output = _SP5

# Sequencer Pitch 6
[pot]
    select = L1.3
    pot = P2.6
    output = _SP6

# Sequencer Pitch 7
[pot]
    select = L1.3
    pot = P2.8
    output = _SP7

# Sequencer Pitch 8
[pot]
    select = L1.3
    pot = P2.10
    output = _SP8

# Sequencer Chord 1
[pot]
    select = L1.4
    pot = P2.3
    output = _SC1

# Sequencer Chord 2
[pot]
    select = L1.4
    pot = P2.5
    output = _SC2

# Sequencer Chord 3
[pot]
    select = L1.4
    pot = P2.7
    output = _SC3

# Sequencer Chord 4
[pot]
    select = L1.4
    pot = P2.9
    output = _SC4

# Sequencer Chord 5
[pot]
    select = L1.4
    pot = P2.4
    output = _SC5

# Sequencer Chord 6
[pot]
    select = L1.4
    pot = P2.6
    output = _SC6

# Sequencer Chord 7
[pot]
    select = L1.4
    pot = P2.8
    output = _SC7

# Sequencer Chord 8
[pot]
    select = L1.4
    pot = P2.10
    output = _SC8

[logic]
    input1 = I4
    input2 = B1.1
    or = _SEQ_ADVANCE

[logic]
    input1 = I8
    input2 = B1.2
    or = _SEQ_RESET

[sequencer]
    clock = _SEQ_ADVANCE
    reset = _SEQ_RESET
    steps = 8
    pitch1 = _SP1
    pitch2 = _SP2
    pitch3 = _SP3
    pitch4 = _SP4
    pitch5 = _SP5
    pitch6 = _SP6
    pitch7 = _SP7
    pitch8 = _SP8
    cv1 = _SC1
    cv2 = _SC2
    cv3 = _SC3
    cv4 = _SC4
    cv5 = _SC5
    cv6 = _SC6
    cv7 = _SC7
    cv8 = _SC8
    gate1 = 1
    gate2 = 1
    gate3 = 1
    gate4 = 1
    gate5 = 1
    gate6 = 1
    gate7 = 1
    gate8 = 1
    pitchoutput = _PSEQ
    cvoutput = _CVSEQ

# -------------------------------------------------
# Underlying Chord
# -------------------------------------------------

[chord]
    pitch = 0
    spread = 0
    inversion = 1
    root = _PSEQ * 12
    degree = _CVSEQ * 23.9999
    select1 = 1
    select3 = 1
    select5 = 1
    select7 = 1
    select9 = 0
    select11 = 0
    select13 = 0
    output1 = _ROOT_V
    output2 = _THIRD_V
    output3 = _FIFTH_V
    output4 = _SEVENTH_V

[math]
    input1 = _ROOT_V * 120
    input2 = 12
    modulo = _ROOT_PITCH

[math]
    input1 = _THIRD_V * 120
    input2 = 12
    modulo = _THIRD_PITCH

[math]
    input1 = _FIFTH_V * 120
    input2 = 12
    modulo = _FIFTH_PITCH

[math]
    input1 = _SEVENTH_V * 120
    input2 = 12
    modulo = _SEVENTH_PITCH

[math]
    input1 = _ROOT_V * 120
    input2 = _THIRD_V * 120
    difference = _THIRD_MINUS_ROOT

[math]
    input1 = _THIRD_V * 120
    input2 = _FIFTH_V * 120
    difference = _FIFTH_MINUS_THIRD

[math]
    input1 = _FIFTH_V * 120
    input2 = _SEVENTH_V * 120
    difference = _SEVENTH_MINUS_FIFTH

[math]
    input1 = _SEVENTH_V * 120
    input2 = _ROOT_V * 120 + 12
    difference = _ROOT_MINUS_SEVENTH

[copy]
    input = _ROOT_V
    output = O5

[copy]
    input = _THIRD_V
    output = O6

[copy]
    input = _FIFTH_V
    output = O7

[copy]
    input = _SEVENTH_V
    output = O8

# -------------------------------------------------
# Input
# -------------------------------------------------

[math]
    input1 = _QUANTIZED_INPUT * 120
    input2 = 12
    modulo = _INPUT_PITCH

[quantizer]
    input = I1
    steps = 12
    bypass = 0
    output = _QUANTIZED_INPUT

# -------------------------------------------------
# Output Harmony
# -------------------------------------------------

[switch]
    input1 = _ROOT_MINUS_SEVENTH
    input2 = _SEVENTH_MINUS_FIFTH
    input3 = _FIFTH_MINUS_THIRD
    input4 = _THIRD_MINUS_ROOT
    offset = _MATCHING_INDEX
    output1 = _CHORDTONE_FIRST_DELTA
    output2 = _CHORDTONE_SECOND_DELTA
    output3 = _CHORDTONE_THIRD_DELTA

[compare]
    input = _INPUT_PITCH
    compare = _ROOT_PITCH
    ifequal = 0
    else = _COMPARE_357
    output = _MATCHING_INDEX
    precision = 0.002

[compare]
    input = _INPUT_PITCH
    compare = _THIRD_PITCH
    ifequal = 3
    else = _COMPARE_57
    output = _COMPARE_357
    precision = 0.002

[compare]
    input = _INPUT_PITCH
    compare = _FIFTH_PITCH
    ifequal = 2
    else = _COMPARE_7
    output = _COMPARE_57
    precision = 0.002

[compare]
    input = _INPUT_PITCH
    compare = _SEVENTH_PITCH
    ifequal = 1
    else = -1
    output = _COMPARE_7
    precision = 0.002

[compare]
    input = _MATCHING_INDEX
    compare = -1
    ifequal = -3
    else = _CHORDTONE_FIRST_DELTA
    output = _FIRST_DELTA

[compare]
    input = _MATCHING_INDEX
    compare = -1
    ifequal = -3
    else = _CHORDTONE_SECOND_DELTA
    output = _SECOND_DELTA

[compare]
    input = _MATCHING_INDEX
    compare = -1
    ifequal = -3
    else = _CHORDTONE_THIRD_DELTA
    output = _THIRD_DELTA

[copy]
    input = _QUANTIZED_INPUT * 120
    output = _OUTPITCH1

[copy]
    input = _OUTPITCH1 + _FIRST_DELTA
    output = _OUTPITCH2

[copy]
    input = _OUTPITCH2 + _SECOND_DELTA
    output = _OUTPITCH3

[copy]
    input = _OUTPITCH3 + _THIRD_DELTA
    output = _OUTPITCH4

[copy]
    input = _OUTPITCH1 / 120
    output = O1

[copy]
    input = _OUTPITCH2 / 120
    output = O2

[copy]
    input = _OUTPITCH3 / 120
    output = O3

[copy]
    input = _OUTPITCH4 / 120
    output = O4
