# Buttongroup where pressed button isn't active till the next incoming gate

# This is a snippet demonstrating a buttongroup where, instead of immediately switching to the button you press, pressing a button "arms" that button to be switched to on the next incoming gate on an input. The armed button is indicated with a flashing led and the fully-active button with a fully-lit led.
# 
# If the gate input is unpatched, the button switches immediately like a typical buttongroup.

# INPUTS:
#  I1: [adv] gate here advances to next-selected button

# OUTPUTS:
#  O1: [cv out] cv representing selected button

[p2b8]

# -------------------------------------------------
# Delayed buttongroup
# -------------------------------------------------

# Indicate whether I1 is unpatched so we know whether any buttonpress should immediately advance.
[copy]
    input = -2
    output = N1

# This buttongroup is used for responding to the buttonpresses that "arm" a button (choose which button will be active on the next gate).
[buttongroup]
    buttonpress = _BUTTONPRESS
    button1 = B1.1
    button2 = B1.2
    button3 = B1.3
    button4 = B1.4
    button5 = B1.5
    button6 = B1.6
    button7 = B1.7
    button8 = B1.8
    value1 = 1
    value2 = 2
    value3 = 3
    value4 = 4
    value5 = 5
    value6 = 6
    value7 = 7
    value8 = 8
    output = _NEXTBUTTON

# If I1 is unpatched, reset the output buttongroup on any buttonpress; otherwise, reset it on a gate/trigger on I1.
[compare]
    input = I1
    compare = -2
    ifequal = _BUTTONPRESS
    else = I1
    output = _BGRESET

# The "output" buttongroup, i.e. which button is fully active.
[buttongroup]
    led1 = L1.1
    led2 = L1.2
    led3 = L1.3
    led4 = L1.4
    led5 = L1.5
    led6 = L1.6
    led7 = L1.7
    led8 = L1.8
    startbutton = _NEXTBUTTON
    clear = _BGRESET
    output = _BGVALUE

# Scales the value of the output buttongroup to a CV output.
[copy]
    input = _BGVALUE / 8
    output = O1

# Provides an LFO for flashing buttons. Used below to indicate which button is "armed" (active next).
[lfo]
    level = 0.5
    hz = 2
    triangle = _FLASHLFO

# Don't flash the currently-active button, even if it's also the next-active button.
[compare]
    input = _NEXTBUTTON
    compare = _BGVALUE + 1
    ifequal = 1
    else = _FLASHLFO
    output = _FLASH

# Flash button 1 if it's next active.
[select]
    input = _FLASH
    select = _NEXTBUTTON
    selectat = 1
    output = L1.1

# Flash button 2 if it's next active.
[select]
    input = _FLASH
    select = _NEXTBUTTON
    selectat = 2
    output = L1.2

# Flash button 3 if it's next active.
[select]
    input = _FLASH
    select = _NEXTBUTTON
    selectat = 3
    output = L1.3

# Flash button 4 if it's next active.
[select]
    input = _FLASH
    select = _NEXTBUTTON
    selectat = 4
    output = L1.4

# Flash button 5 if it's next active.
[select]
    input = _FLASH
    select = _NEXTBUTTON
    selectat = 5
    output = L1.5

# Flash button 6 if it's next active.
[select]
    input = _FLASH
    select = _NEXTBUTTON
    selectat = 6
    output = L1.6

# Flash button 7 if it's next active.
[select]
    input = _FLASH
    select = _NEXTBUTTON
    selectat = 7
    output = L1.7

# Flash button 8 if it's next active.
[select]
    input = _FLASH
    select = _NEXTBUTTON
    selectat = 8
    output = L1.8
