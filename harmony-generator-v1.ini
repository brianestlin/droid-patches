# INPUTS:
#  I1: [mel cv] melody cv in
#  I4: [adv] advance chord sequencer
#  I5: [root] root in, v/oct
#  I6: [degree] degree in, 0-23
#  I8: [reset] reset chord sequencer

# OUTPUTS:
#  O1: [mel] melody 1v/oct output
#  O2: [har 1] first harmony 1v/oct output
#  O3: [har 2] second harmony 1v/oct output
#  O4: [har 3] third harmony 1v/oct output
#  O5: [root] root of underlying chord
#  O6: [third] third of underlying chord
#  O7: [fifth] fifth of underlying chord
#  O8: [seventh] seventh of underlying chord

# CONTROLLER 1:
#  B1.1: [adv]
#  B1.2: [reset]
#  B1.3: [root] pots control roots
#  B1.4: [chord] pots control degree

[p2b8]

# -------------------------------------------------
# Underlying Chord
# -------------------------------------------------

[copy]
    input = I6 * 23.9999
    output = _CVSEQ

[math]
    input1 = I5 * 120
    input2 = 12
    modulo = _PSEQ

[chord]
    pitch = 0
    spread = 0
    inversion = 1
    root = _PSEQ
    degree = _CVSEQ
    select1 = 1
    select3 = 1
    select5 = 1
    select7 = 1
    select9 = 0
    select11 = 0
    select13 = 0
    output1 = _ROOT_V
    output2 = _THIRD_V
    output3 = _FIFTH_V
    output4 = _SEVENTH_V

[math]
    input1 = _ROOT_V * 120
    input2 = 12
    modulo = _ROOT_PITCH

[math]
    input1 = _THIRD_V * 120
    input2 = 12
    modulo = _THIRD_PITCH

[math]
    input1 = _FIFTH_V * 120
    input2 = 12
    modulo = _FIFTH_PITCH

[math]
    input1 = _SEVENTH_V * 120
    input2 = 12
    modulo = _SEVENTH_PITCH

[math]
    input1 = _ROOT_V * 120
    input2 = _THIRD_V * 120
    difference = _THIRD_MINUS_ROOT

[math]
    input1 = _THIRD_V * 120
    input2 = _FIFTH_V * 120
    difference = _FIFTH_MINUS_THIRD

[math]
    input1 = _FIFTH_V * 120
    input2 = _SEVENTH_V * 120
    difference = _SEVENTH_MINUS_FIFTH

[math]
    input1 = _SEVENTH_V * 120
    input2 = _ROOT_V * 120 + 12
    difference = _ROOT_MINUS_SEVENTH

[copy]
    input = _ROOT_V
    output = O5

[copy]
    input = _THIRD_V
    output = O6

[copy]
    input = _FIFTH_V
    output = O7

[copy]
    input = _SEVENTH_V
    output = O8

# -------------------------------------------------
# Input
# -------------------------------------------------

[math]
    input1 = _QUANTIZED_INPUT * 120
    input2 = 12
    modulo = _INPUT_PITCH

[quantizer]
    input = I1
    steps = 12
    bypass = 0
    output = _QUANTIZED_INPUT

# -------------------------------------------------
# Output Harmony
# -------------------------------------------------

[switch]
    input1 = _ROOT_MINUS_SEVENTH
    input2 = _SEVENTH_MINUS_FIFTH
    input3 = _FIFTH_MINUS_THIRD
    input4 = _THIRD_MINUS_ROOT
    offset = _MATCHING_INDEX
    output1 = _CHORDTONE_FIRST_DELTA
    output2 = _CHORDTONE_SECOND_DELTA
    output3 = _CHORDTONE_THIRD_DELTA

[compare]
    input = _INPUT_PITCH
    compare = _ROOT_PITCH
    ifequal = 0
    else = _COMPARE_357
    output = _MATCHING_INDEX
    precision = 0.002

[compare]
    input = _INPUT_PITCH
    compare = _THIRD_PITCH
    ifequal = 3
    else = _COMPARE_57
    output = _COMPARE_357
    precision = 0.002

[compare]
    input = _INPUT_PITCH
    compare = _FIFTH_PITCH
    ifequal = 2
    else = _COMPARE_7
    output = _COMPARE_57
    precision = 0.002

[compare]
    input = _INPUT_PITCH
    compare = _SEVENTH_PITCH
    ifequal = 1
    else = -1
    output = _COMPARE_7
    precision = 0.002

[compare]
    input = _MATCHING_INDEX
    compare = -1
    ifequal = -3
    else = _CHORDTONE_FIRST_DELTA
    output = _FIRST_DELTA

[compare]
    input = _MATCHING_INDEX
    compare = -1
    ifequal = -3
    else = _CHORDTONE_SECOND_DELTA
    output = _SECOND_DELTA

[compare]
    input = _MATCHING_INDEX
    compare = -1
    ifequal = -3
    else = _CHORDTONE_THIRD_DELTA
    output = _THIRD_DELTA

[copy]
    input = _QUANTIZED_INPUT * 120
    output = _OUTPITCH1

[copy]
    input = _OUTPITCH1 + _FIRST_DELTA
    output = _OUTPITCH2

[copy]
    input = _OUTPITCH2 + _SECOND_DELTA
    output = _OUTPITCH3

[copy]
    input = _OUTPITCH3 + _THIRD_DELTA
    output = _OUTPITCH4

[copy]
    input = _OUTPITCH1 / 120
    output = O1

[copy]
    input = _OUTPITCH2 / 120
    output = O2

[copy]
    input = _OUTPITCH3 / 120
    output = O3

[copy]
    input = _OUTPITCH4 / 120
    output = O4
